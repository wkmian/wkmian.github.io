{"meta":{"title":"wkmian的博客","subtitle":"IT界的小学生","description":"成长之路","author":"wkmian","url":"https://wkmian.github.io"},"pages":[{"title":"标签","date":"2018-06-26T07:14:24.000Z","updated":"2018-06-26T07:27:38.399Z","comments":true,"path":"tags/index.html","permalink":"https://wkmian.github.io/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-06-26T07:05:18.000Z","updated":"2018-06-26T07:27:38.418Z","comments":true,"path":"categories/index.html","permalink":"https://wkmian.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"二进制运算","slug":"二进制运算","date":"2018-07-19T01:56:09.000Z","updated":"2018-07-19T04:10:07.941Z","comments":true,"path":"2018/07/19/binary-operation/","link":"","permalink":"https://wkmian.github.io/2018/07/19/binary-operation/","excerpt":"","text":"二进制运算 &amp; 与运算n位都是1得1，否则得0 | 或运算n位都是0得0，否则得1 ^ 异或预算n位相同得0，否则得1 ~ 非运算（一元运算符）0变1,1变0 &lt;&lt; 左移向左移动，低位补0 >> 右移向右移动n位，最高位补符号位（正数补0，负数补1），其他位补0 >>> 无符号右移同右移，但最高位统一补0 位移注意点：位移时如果位移位数大于数据类型长度，会先将位移位数取模计算，否则将产生无意义元算 源码，反码，补码正整数的原码，反码，补码都是本身原码：原码就是符号位加上真值的绝对值。反码：保留符号位，其余取反补码：反码+1","categories":[{"name":"编程","slug":"编程","permalink":"https://wkmian.github.io/categories/编程/"}],"tags":[{"name":"二进制，算法","slug":"二进制，算法","permalink":"https://wkmian.github.io/tags/二进制，算法/"}]},{"title":"算法题总结","slug":"算法题总结","date":"2018-07-17T06:22:55.000Z","updated":"2018-07-17T06:24:38.519Z","comments":true,"path":"2018/07/17/summary-of-algorithm-questions/","link":"","permalink":"https://wkmian.github.io/2018/07/17/summary-of-algorithm-questions/","excerpt":"","text":"有15个瓶子，其中最多有一瓶有毒，现在有四只老鼠，喝了有毒的水之后，第二天就会死。如何在第二天就可以判断出哪个瓶子有毒。提示：二进制","categories":[{"name":"编程","slug":"编程","permalink":"https://wkmian.github.io/categories/编程/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://wkmian.github.io/tags/算法/"}]},{"title":"log4j2使用总结","slug":"log4j2使用总结","date":"2018-07-17T01:44:10.000Z","updated":"2018-07-19T06:41:28.424Z","comments":true,"path":"2018/07/17/summary-of-log4j2-usage/","link":"","permalink":"https://wkmian.github.io/2018/07/17/summary-of-log4j2-usage/","excerpt":"","text":"lo4j2的总结","categories":[],"tags":[{"name":"java,log,log4j2","slug":"java-log-log4j2","permalink":"https://wkmian.github.io/tags/java-log-log4j2/"}]},{"title":"java定时器Timer","slug":"java定时器Timer","date":"2018-07-12T07:51:14.000Z","updated":"2018-07-17T06:23:42.599Z","comments":true,"path":"2018/07/12/java-timer/","link":"","permalink":"https://wkmian.github.io/2018/07/12/java-timer/","excerpt":"","text":"今天来聊一聊Java原生的定时器Timer 添加定时任务123456public void schedule(TimerTask task, long delay) ;public void schedule(TimerTask task, Date time);public void schedule(TimerTask task, long delay, long period);public void schedule(TimerTask task, Date firstTime, long period);public void scheduleAtFixedRate(TimerTask task, long delay, long period);public void scheduleAtFixedRate(TimerTask task, Date firstTime,long period); Timer添加定时任务有这六种方式，但其本质上都是调用下面的方法123456/** * @param task 执行任务 * @param time 时间戳 * @param period 延迟毫秒数 大于0小于0区分是 schedule 还是 scheduleAtFixedRate */private void sched(TimerTask task, long time, long period); schedule 与 scheduleAtFixedRate 的区别： schedule 是按照上次任务执行完成的时间点延迟执行，单个任务的执行时长会影响下次任务的执行开始时间。 scheduleAtFixedRate 是按照上次任务的开始时间点计算下次任务的开始时间点，当单个任务执行时间过长会产生并发的问题。 cancel()1public void cancel() 将该定时器内的所有任务全部清空 purge()1public int purge() 将该定时器中的定时任务为 TimerTask.CANCELLED 的TimerTask移出定时器并返回移出数量 最后说明如果TimerTask的首次执行时间小于当前时间会立即执行一次，并不会延迟到下次执行。","categories":[{"name":"编程","slug":"编程","permalink":"https://wkmian.github.io/categories/编程/"}],"tags":[{"name":"java","slug":"java","permalink":"https://wkmian.github.io/tags/java/"}]},{"title":"linux命令","slug":"linux命令","date":"2018-07-03T03:04:06.000Z","updated":"2018-07-12T07:53:33.162Z","comments":true,"path":"2018/07/03/linux-command/","link":"","permalink":"https://wkmian.github.io/2018/07/03/linux-command/","excerpt":"","text":"","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://wkmian.github.io/tags/linux/"}]},{"title":"第一个博客","slug":"第一个博客","date":"2018-06-26T07:29:34.000Z","updated":"2018-07-17T07:02:41.518Z","comments":false,"path":"2018/06/26/first-blog/","link":"","permalink":"https://wkmian.github.io/2018/06/26/first-blog/","excerpt":"","text":"这个是我的第一个博客","categories":[],"tags":[]}]}