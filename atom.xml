<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wkmian的博客</title>
  
  <subtitle>IT界的小学生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wkmian.github.io/"/>
  <updated>2018-07-24T03:02:07.972Z</updated>
  <id>https://wkmian.github.io/</id>
  
  <author>
    <name>wkmian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二进制运算</title>
    <link href="https://wkmian.github.io/2018/07/19/binary-operation/"/>
    <id>https://wkmian.github.io/2018/07/19/binary-operation/</id>
    <published>2018-07-19T01:56:09.000Z</published>
    <updated>2018-07-24T03:02:07.972Z</updated>
    
    <content type="html"><![CDATA[<h3 id="二进制运算"><a href="#二进制运算" class="headerlink" title="二进制运算"></a>二进制运算</h3><ul><li><p>&amp; 与运算<br>n位都是1得1，否则得0</p></li><li><p>| 或运算<br>n位都是0得0，否则得1</p></li><li><p>^ 异或预算<br>n位相同得0，否则得1</p></li><li><p>~ 非运算（一元运算符）<br>0变1,1变0</p></li><li><p>&lt;&lt; 左移<br>向左移动，低位补0</p></li><li><p>>> 右移<br>向右移动n位，最高位补符号位（正数补0，负数补1），其他位补0</p></li><li><p>>>> 无符号右移<br>同右移，但最高位统一补0</p></li></ul><h4 id="位移注意点："><a href="#位移注意点：" class="headerlink" title="位移注意点："></a>位移注意点：</h4><p>位移时如果位移位数大于数据类型长度，会先将位移位数取模计算，否则将产生无意义元算</p><h4 id="源码，反码，补码"><a href="#源码，反码，补码" class="headerlink" title="源码，反码，补码"></a>源码，反码，补码</h4><p>正整数的原码，反码，补码都是本身<br>原码：原码就是符号位加上真值的绝对值。<br>反码：保留符号位，其余取反<br>补码：反码+1  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;二进制运算&quot;&gt;&lt;a href=&quot;#二进制运算&quot; class=&quot;headerlink&quot; title=&quot;二进制运算&quot;&gt;&lt;/a&gt;二进制运算&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&amp;amp; 与运算&lt;br&gt;n位都是1得1，否则得0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;| 或运算&lt;
      
    
    </summary>
    
      <category term="编程" scheme="https://wkmian.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="二进制" scheme="https://wkmian.github.io/tags/%E4%BA%8C%E8%BF%9B%E5%88%B6/"/>
    
      <category term="算法" scheme="https://wkmian.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>算法题总结</title>
    <link href="https://wkmian.github.io/2018/07/17/summary-of-algorithm-questions/"/>
    <id>https://wkmian.github.io/2018/07/17/summary-of-algorithm-questions/</id>
    <published>2018-07-17T06:22:55.000Z</published>
    <updated>2018-07-17T06:24:38.519Z</updated>
    
    <content type="html"><![CDATA[<ul><li>有15个瓶子，其中最多有一瓶有毒，现在有四只老鼠，喝了有毒的水之后，第二天就会死。如何在第二天就可以判断出哪个瓶子有毒。提示：二进制</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;有15个瓶子，其中最多有一瓶有毒，现在有四只老鼠，喝了有毒的水之后，第二天就会死。如何在第二天就可以判断出哪个瓶子有毒。提示：二进制&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="编程" scheme="https://wkmian.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="算法" scheme="https://wkmian.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>log4j2使用总结</title>
    <link href="https://wkmian.github.io/2018/07/17/summary-of-log4j2-usage/"/>
    <id>https://wkmian.github.io/2018/07/17/summary-of-log4j2-usage/</id>
    <published>2018-07-17T01:44:10.000Z</published>
    <updated>2018-07-24T03:00:35.055Z</updated>
    
    <content type="html"><![CDATA[<h4 id="lo4j2的总结"><a href="#lo4j2的总结" class="headerlink" title="lo4j2的总结"></a>lo4j2的总结</h4><p>log4j2不同于log4j</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;lo4j2的总结&quot;&gt;&lt;a href=&quot;#lo4j2的总结&quot; class=&quot;headerlink&quot; title=&quot;lo4j2的总结&quot;&gt;&lt;/a&gt;lo4j2的总结&lt;/h4&gt;&lt;p&gt;log4j2不同于log4j&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="java" scheme="https://wkmian.github.io/tags/java/"/>
    
      <category term="log" scheme="https://wkmian.github.io/tags/log/"/>
    
      <category term="log4j2" scheme="https://wkmian.github.io/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>java定时器Timer</title>
    <link href="https://wkmian.github.io/2018/07/12/java-timer/"/>
    <id>https://wkmian.github.io/2018/07/12/java-timer/</id>
    <published>2018-07-12T07:51:14.000Z</published>
    <updated>2018-07-17T06:23:42.599Z</updated>
    
    <content type="html"><![CDATA[<p>今天来聊一聊Java原生的定时器Timer</p><h4 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public void schedule(TimerTask task, long delay) ;</span><br><span class="line">public void schedule(TimerTask task, Date time);</span><br><span class="line">public void schedule(TimerTask task, long delay, long period);</span><br><span class="line">public void schedule(TimerTask task, Date firstTime, long period);</span><br><span class="line">public void scheduleAtFixedRate(TimerTask task, long delay, long period);</span><br><span class="line">public void scheduleAtFixedRate(TimerTask task, Date firstTime,long period);</span><br></pre></td></tr></table></figure><p>Timer添加定时任务有这六种方式，但其本质上都是调用下面的方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @param task 执行任务</span><br><span class="line"> * @param time 时间戳</span><br><span class="line"> * @param period 延迟毫秒数 大于0小于0区分是 schedule 还是 scheduleAtFixedRate</span><br><span class="line"> */</span><br><span class="line">private void sched(TimerTask task, long time, long period);</span><br></pre></td></tr></table></figure></p><hr><h4 id="schedule-与-scheduleAtFixedRate-的区别："><a href="#schedule-与-scheduleAtFixedRate-的区别：" class="headerlink" title="schedule 与 scheduleAtFixedRate 的区别："></a>schedule 与 scheduleAtFixedRate 的区别：</h4><ul><li>schedule 是按照上次任务执行完成的时间点延迟执行，单个任务的执行时长会影响下次任务的执行开始时间。</li><li>scheduleAtFixedRate 是按照上次任务的开始时间点计算下次任务的开始时间点，当单个任务执行时间过长会产生并发的问题。</li></ul><hr><h4 id="cancel"><a href="#cancel" class="headerlink" title="cancel()"></a>cancel()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public void cancel()</span><br></pre></td></tr></table></figure><p>将该定时器内的所有任务全部清空</p><hr><h4 id="purge"><a href="#purge" class="headerlink" title="purge()"></a>purge()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public int purge()</span><br></pre></td></tr></table></figure><p>将该定时器中的定时任务为 TimerTask.CANCELLED 的TimerTask移出定时器并返回移出数量</p><hr><h4 id="最后说明"><a href="#最后说明" class="headerlink" title="最后说明"></a>最后说明</h4><p>如果TimerTask的首次执行时间小于当前时间会立即执行一次，并不会延迟到下次执行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天来聊一聊Java原生的定时器Timer&lt;/p&gt;
&lt;h4 id=&quot;添加定时任务&quot;&gt;&lt;a href=&quot;#添加定时任务&quot; class=&quot;headerlink&quot; title=&quot;添加定时任务&quot;&gt;&lt;/a&gt;添加定时任务&lt;/h4&gt;&lt;figure class=&quot;highlight pla
      
    
    </summary>
    
      <category term="编程" scheme="https://wkmian.github.io/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="java" scheme="https://wkmian.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>linux命令</title>
    <link href="https://wkmian.github.io/2018/07/03/linux-command/"/>
    <id>https://wkmian.github.io/2018/07/03/linux-command/</id>
    <published>2018-07-03T03:04:06.000Z</published>
    <updated>2018-07-12T07:53:33.162Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="linux" scheme="https://wkmian.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>第一个博客</title>
    <link href="https://wkmian.github.io/2018/06/26/first-blog/"/>
    <id>https://wkmian.github.io/2018/06/26/first-blog/</id>
    <published>2018-06-26T07:29:34.000Z</published>
    <updated>2018-07-17T07:02:41.518Z</updated>
    
    <content type="html"><![CDATA[<p>这个是我的第一个博客</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个是我的第一个博客&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
